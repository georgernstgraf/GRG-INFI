use SchulVW905417
go

-- Befehle um die erste Datenbank für den DBIS2  Access Unterricht mit Daten zu versorgen
--  Schüler der 2. Hif (und noch ein paar andere)


-- um die echten internen Lehrer IDs zu verschleiern könnte man in L_Nummer2  alibinrs generieren
--    in dieser db unnötig, weil Lehrerkürzel als PK
select Abt_ID, Abt_Nr, Abt_Name, L_nr as Abt_Leiter
from tabteilungen left join tLehrer on Abt_Leiter = l_id
go

select Sja_Nr, Sja_Bezeichnung, Sja_Bezeichnungkurz, Sja_Bezeichnunglang, Sja_Datumvon, Sja_Datumbis
from tSchuljahre
where Sja_Aktiv = 1 and Sja_Nr >= 20090

select  Rel_ID, Rel_Nr, Rel_Name, Rel_Gesetzlichanerkannt,Rel_Staatlicheingetragen
from tReligionen

select  Ges_ID, Ges_Mw, Ges_Maennlichweiblich ,Ges_Schuelerschuelerin,
        case when ges_ID = 1 then 'Lehrer' else 'Lehrerin' end as Ges_Lehrerlehrerin
from tGeschlechter
where Ges_ID < 4


select --Sv_Nr  as S_Nr,                 --auch nicht, im access dann als autowert erzeugen
       null as S_Nr,
       Sv_Zuname  as S_Zuname,
       Sv_Vorname1 as S_Vorname,       
       Sv_Geschlecht as S_Geschlecht,            
       --Sv_Religion   mit Absicht nicht, sollen schüler als fk dazutun
       sv_gebdat + (ABS(CHECKSUM(NEWID())) % 1000 -500) /2  	as S_Gebdatum,			-- zufällige Zahlen -250 bis +250
        case when PATINDEX('%[0-9]%',t2.Sadr_Anschrift) > 1 
						then rtrim(LEFT(t2.Sadr_Anschrift, PATINDEX('%[0-9]%',t2.Sadr_Anschrift)-1)) 
						else t2.Sadr_Anschrift end   as S_Strasse,
        case when PATINDEX('%[0-9]%',t3.Sadr_Anschrift) > 1 
						 then substring(t3.Sadr_Anschrift, PATINDEX('%[0-9]%',t3.Sadr_Anschrift),400) 
						 else null end  as S_Hausnummer,
       t1.sadr_plz as S_Postleitzahl,
       t1.sadr_ort as S_Postort,
       Svk_Nr as S_Klasse
from infodefschueler
left join tSchueleradressen as t1 on t1.Sadr_ID = ABS(CHECKSUM(NEWID())) % 1000 +222
left join tSchueleradressen as t2 on t2.Sadr_ID = ABS(CHECKSUM(NEWID())) % 1000 +1222
left join tSchueleradressen as t3 on t3.Sadr_ID = ABS(CHECKSUM(NEWID())) % 1000 +2222
where svk_Nr like '2_hif' or svk_Nr like '2_fid' or svk_nr = '1ahbgs' or svk_Nr like '__BIF'
order by Svk_Nr, Sv_Zuname, sv_vorname1

select kv_Nr as K_Nr,
       kv_jahrsem as K_Jahrsem,
       kv_nrextern as K_Nrextern,
       Kv_Vorstandnr as K_Vorstand,
       Kv_KAbteilung as K_Abteilung,
       Kv_Datumvon as K_Datumvon,
       Kv_Datumbis as K_Datumbis

from infodefklassen
where kv_Nr like '__hdv%' or kv_Nr like '__hif' or kv_Nr like '__fid' or kv_nr like '__hbgs' or Kv_Nr like '__BIF'
order by kv_Nr

select L_Nr,
	   L_Zuname,
	   L_Vorname,
	   L_Titel,
	   L_Titelnach,
	   L_Geschlecht-10 as L_Geschlecht,
	   L_Sprechstunde_tag
 from tlehrer
 where L_Nr = 'hi' or
       L_ID in (select abt_leiter from tAbteilungen) or
       L_ID in (select Kv_Vorstand from infodefklassen
                 where kv_Nr like '__hdv%' or kv_Nr like '__hif' or kv_Nr like '__fid' or kv_nr like '__hbgs'   or Kv_Nr like '__BIF') or
       L_ID in (select Unt_lehrer from tunterricht where Unt_Klasse like '2_hif' and Unt_Jahrsem = 20100 )
order by l_Nr       



-- ursprünglich für eine xls Übung im Einsatz
--select Svk_Nr as Klasse,
--       Svsja_Bezeichnung  as Schuljahr, 
--       Svk_Vorstandnr  as Kvkuerzel,
--       Svk_Vorstandname as Kvname,
--       Sv_Zuname  as Zuname,
--       Sv_Vorname1 as Vorname,
--       Svges_Nr as Geschlecht,            --sv_gebdat , 
--       convert (varchar(22),sv_gebdat +
--         (ABS(CHECKSUM(NEWID())) % 1000 -500) /2    ,104)	as Gebdatum,			-- zufällige Zahlen -250 bis +250
--        case when PATINDEX('%[0-9]%',t2.Sadr_Anschrift) > 1 
--						then rtrim(LEFT(t2.Sadr_Anschrift, PATINDEX('%[0-9]%',t2.Sadr_Anschrift)-1)) 
--						else t2.Sadr_Anschrift end   as Strasse,
--        case when PATINDEX('%[0-9]%',t3.Sadr_Anschrift) > 1 
--						 then substring(t3.Sadr_Anschrift, PATINDEX('%[0-9]%',t3.Sadr_Anschrift),400) 
--						 else null end  as Hausnummer,
--       t1.sadr_plz as Postleitzahl,
--       t1.sadr_ort as Postort
--from infodefschueler
--left join tSchueleradressen as t1 on t1.Sadr_ID = ABS(CHECKSUM(NEWID())) % 1000 +222
--left join tSchueleradressen as t2 on t2.Sadr_ID = ABS(CHECKSUM(NEWID())) % 1000 +1222
--left join tSchueleradressen as t3 on t3.Sadr_ID = ABS(CHECKSUM(NEWID())) % 1000 +2222
--where svk_Nr like '2_hif'
--order by Svk_Nr, Sv_Zuname, sv_vorname1