Abfragen mit JOIN mehrerer Tabellen
   FROM Zweig --- die erstellung in der Entwurfsansicht ist hier sehr praktisch


--In welcher Abteilung ist der Lehrer Bruckner der Abteilungsvorstand 
--       (Ausgabe Abteilungsname,…)
SELECT L_Zuname, L_Vorname, Abt_Nr, Abt_Name
FROM Lehrer INNER JOIN Abteilungen ON Lehrer.L_Nr = Abteilungen.Abt_Leiter
WHERE L_Zuname = "Bruckner"

--In welchen Klassen (K_Nr, K_jahrsem ausgeben) sind Schüler aus Transdanubien
SELECT K_Nr, K_Jahrsem, S_Zuname, S_Vorname, S_Postleitzahl
FROM Klassen INNER JOIN schueler ON Klassen.K_Nr = Schueler.S_Klasse
WHERE S_Postleitzahl  in (1210,1220)
ORDER BY K_Nr, S_Zuname

--Gebe alle Klassen (K_Nr) mit dem Namen der Abteilung aus
SELECT K_Nr, K_Jahrsem, Abt_Nr, Abt_Name
FROM Klassen INNER JOIN Abteilungen ON Klassen.K_Abteilung = Abteilungen.Abt_ID
ORDER BY K_Nr

--Gebe alle Abteilungen mit Namen und Geschlecht des AV aus
SELECT Abt_Nr, Abt_Name, Abt_Leiter, L_Zuname, L_Vorname
FROM Abteilungen INNER JOIN lehrer ON Abteilungen.Abt_Leiter = Lehrer.L_Nr

--Welche Schüler haben ein evangelisches Religionsbekenntnis          
SELECT S_Zuname, S_Vorname, Rel_Nr, Rel_Name
FROM Religionen INNER JOIN schueler ON Religionen.Rel_ID = Schueler.S_Religion
	    --  FK S_Religion enthält immer den NULL Wert, somit keine Ausgabe

--Gebe alle Klassen aus, dazu das Beginndatum und das Endedatum 
--(falls dies in der Klasse leer ist verwende den Wert aus dem Schuljahr)     
--Hinweis: Nz-Funktion
SELECT K_Nr, K_Jahrsem,   Nz(K_Datumvon, Sja_Datumvon) as von, 
             Nz(K_Datumbis, Sja_Datumbis) as bis, K_Datumbis, Sja_Datumbis
FROM Klassen INNER JOIN schuljahre ON Klassen.K_Jahrsem = Schuljahre.Sja_Nr
ORDER BY K_Nr desc


--Gebe alle Klassen mit dem Namen des AV aus
SELECT K_Nr, Abt_Nr, Abt_Name, Abt_Leiter, L_Zuname, L_Vorname
FROM (klassen INNER JOIN Abteilungen  ON Klassen.K_Abteilung = Abteilungen.Abt_ID)
                INNER JOIN lehrer ON Abteilungen.Abt_Leiter = Lehrer.L_Nr
			-- hier gibt es erstmals 3 Tabellen, schreibt man den FROM von Hand
			-- muss der erste Teil geklammert werden
			-- Anmerkung: dies ist eine Laune von MS Access (wie auch die Notwendigkeit im ON unbedingt tabellenname.feldname schreiben zu müssen)

--Gebe alle Schülerinnennamen (also nur weibliche) mit dem Namen des KV aus, 
--falls auch dieser weiblich ist (S_Geschlecht bzw L_Geschlecht muß 2 sein)
SELECT S_Zuname, S_Vorname, K_Nr, L_Zuname, L_Vorname
FROM (schueler INNER JOIN klassen  ON Schueler.S_Klasse = Klassen.K_Nr )
                  INNER JOIN lehrer ON Klassen.K_Vorstand = Lehrer.L_Nr
WHERE L_Geschlecht = 2  and  S_Geschlecht = 2

--Gebe alle Klassen mit dem Namen des KV und des AV aus   
SELECT K_Nr, Abt_Nr, 
             lehrerAV.L_Zuname as AVzuname, lehrerAV.L_Vorname as AVvorname,
             lehrerKV.L_Zuname as KVzuname, lehrerKV.L_Vorname as KVvorname
FROM ((klassen INNER JOIN Abteilungen  ON Klassen.K_Abteilung = Abteilungen.Abt_ID)
                INNER JOIN lehrer as lehrerAV ON Abteilungen.Abt_Leiter = LehrerAV.L_Nr)
                INNER JOIN lehrer as lehrerKV ON Klassen.K_Vorstand = LehrerKV.L_Nr
    -- in der Entwurfsansicht ist dieser Befehl eher leichter, man muss nur lehrer
    --  2 mal reingeben und die überschüssigen JOIN Linien entfernen
    -- im Handbetrieb muss man "lehrer as lehrerAV"  die Tabelle umbenennen, damit man
    --  im ON und SELECT die richtige Tabelle ansprechen kann
    
    -- logisch verwendet dieser Befehl die Tabellen lehrerKV, Klassen, Abteilungen, lehrerAV
    -- zufällig haben lehrerKV und lehrerAV die gleichen Feldnamen, weshalb man 
    --     immer die Notation tabellenname.feldname verwenden muss                

